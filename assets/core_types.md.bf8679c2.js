import{_ as e,c as t,o as a,a as i}from"./app.53cbd370.js";const k=JSON.parse('{"title":"Types","description":"","frontmatter":{},"headers":[{"level":2,"title":"KeyBindingCallbackMap","slug":"keybindingcallbackmap","link":"#keybindingcallbackmap","children":[{"level":3,"title":"Properties","slug":"properties","link":"#properties","children":[]}]},{"level":2,"title":"KeyBindingCallbacks","slug":"keybindingcallbacks","link":"#keybindingcallbacks","children":[{"level":3,"title":"Properties","slug":"properties-1","link":"#properties-1","children":[]}]},{"level":2,"title":"KeyComboOption","slug":"keycombooption","link":"#keycombooption","children":[]},{"level":2,"title":"KeyBindingOptions","slug":"keybindingoptions","link":"#keybindingoptions","children":[{"level":3,"title":"Properties","slug":"properties-2","link":"#properties-2","children":[]}]}],"relativePath":"core/types.md"}'),d={name:"core/types.md"},r=i('<h1 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-hidden="true">#</a></h1><h2 id="keybindingcallbackmap" tabindex="-1">KeyBindingCallbackMap <a class="header-anchor" href="#keybindingcallbackmap" aria-hidden="true">#</a></h2><p>Represents the key binded by the library.</p><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Mandatory</th></tr></thead><tbody><tr><td>callbacks</td><td>KeyBindingCallbacks</td><td>true</td></tr><tr><td>options</td><td>KeyBindingOptions</td><td>false</td></tr></tbody></table><h2 id="keybindingcallbacks" tabindex="-1">KeyBindingCallbacks <a class="header-anchor" href="#keybindingcallbacks" aria-hidden="true">#</a></h2><p>Represents the callbacks binded by the library.</p><h3 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Mandatory</th></tr></thead><tbody><tr><td>keyupCallback</td><td>(e?: KeyboardEvent) =&gt; void</td><td>false</td></tr><tr><td>keydownCallback</td><td>(e?: KeyboardEvent) =&gt; void</td><td>true</td></tr></tbody></table><h2 id="keycombooption" tabindex="-1">KeyComboOption <a class="header-anchor" href="#keycombooption" aria-hidden="true">#</a></h2><p>Represent the combo options. Available formats are:</p><p><code>Meta, Ctrl, Shift, Alt</code></p><h2 id="keybindingoptions" tabindex="-1">KeyBindingOptions <a class="header-anchor" href="#keybindingoptions" aria-hidden="true">#</a></h2><p>Represent the available options for binding.</p><h3 id="properties-2" tabindex="-1">Properties <a class="header-anchor" href="#properties-2" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Mandatory</th></tr></thead><tbody><tr><td>preventRepeatOnKeyDown</td><td>boolean</td><td>false</td></tr><tr><td>enableWithCombo</td><td>KeyComboOption</td><td>false</td></tr></tbody></table>',16),n=[r];function o(l,s,h,p,c,b){return a(),t("div",null,n)}const g=e(d,[["render",o]]);export{k as __pageData,g as default};
